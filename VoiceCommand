import pyttsx3
import datetime
import speech_recognition as sr
import wikipedia
import webbrowser
import openai
import random
import os
import smtplib
import ecapture
import ecapture as ec
import pyaudio
import csv
from tkinter import *
import speedtest
from todo import *


engine = pyttsx3.init('sapi5')
voices=engine.getProperty('voices')
#print(voices[1].id)
engine.setProperty('voice',voices[1].id)


def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("good morning")

    elif hour>=12 and hour<18:
        speak("good afternoon")

    else:
        speak("good evening")

    speak("I am Jarvis , plese tell me how may I help you")

'''
def chat(chatStr):
    #print(chatStr)
    openai.api_key = "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"
    chatStr += f"Utkarsh: {chatStr}\n Jarvis: "
    response = openai.ChatCompletion.create(
        model="text-davinci-003",
        prompt=chatStr,
    )
    speak(response["choices"][0]["text"])
    chatStr += f"{response['choices'][0]['text']}\n"
    return response["choices"][0]["text"]



def ai(prompt):
    openai.api_key = "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"
    text = f"OpenAI response for Prompt: {prompt} \n ********************\n\n"
    try:
        response = openai.ChatCompletion.create(
            model="text-davinci-003",
            prompt=prompt,
        )
        # print(response["choices"][0]["text"])
        text += response["choices"][0]["text"]
        if not os.path.exists("Openai"):
            os.mkdir("Openai")

        # with open(f"Openai/prompt- {random.randint(1, 2343434356)}", "w") as f:
        with open(f"Openai/{''.join(prompt.split('search')[1:]).strip()}.txt", "w") as f:
            f.write(text)

    except openai.error.RateLimitError as e:
    # Handle the rate limit error here, you might want to retry after some time or notify the user.
        print("Rate limit exceeded. Please wait and try again later.")
'''

def takeCommand():
    #it takes input from microphone and returns a string output
    r=sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        print("recognizing...")
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query}\n")

    except Exception as e:
        print(e)   

        print("Say that again please...")
        return "none"
    return query

if __name__ == "__main__":
    wishMe()
    while True:
        query = takeCommand().lower()

    # logic for executing tasks based on query
        if 'wikipedia' in query:
            speak("Searching wikipedia...")
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("according to wikipedia")
            print(results)
            speak(results)
            #i=i+1

        elif 'open youtube' in query:
            webbrowser.open("youtube.com")
            #i=i+1

        elif 'open google' in query:
            webbrowser.open("google.com")
            #i=i+1

        elif 'open chatGPT' in query:
            webbrowser.open("https:\\//chat.openai.com\/chat")

        elif 'open stack overflow' in query:
            webbrowser.open("stackoverflow.com")
            i=i+1

        elif 'open github' in query:
            webbrowser.open("github.com")
            #i=i+1

        elif 'open webkiosk' in query:
            webbrowser.open("webkiosk.juet.ac.in")
            #i=i+1

        elif 'download video' in query:
            from pytube import YouTube
            link_video = input("Enter the link of video : ")
            yt_1 = YouTube(link_video)
            print(yt_1.title)
            #print(yt_1.thumbnail_url)

            vd = yt_1.streams.all() 
            vid = list(enumerate(vd))
            for i in vd:
                print(i)
            print()
            strm = int(input("Enter your choice : "))
            vd[strm].download()
            print(" Successfully downloaded ")

        elif 'scanner' in query:
            import qrcode as qr
            git_img = qr.make("https://github.com/utkarsh0210")
            git_img.save("Github.png")

            linkedin_img = qr.make("https://www.linkedin.com/in/utkarsh-gupta-650605253/")
            linkedin_img.save("LinkedIn.png")

        elif 'play movie' in query:
            moviepath = "C:/Users/utkun/OneDrive/Desktop/movies"
            os.startfile(moviepath)

        elif 'play some music' in query:
            musicpath = "E:\music"
            songs=os.listdir(musicpath)
            os.startfile(os.path.join(musicpath,songs[random.randint(1,10)]))

        elif 'shuffle the music' in query:
            musicpath = "E:\music"
            songs=os.listdir(musicpath)
            os.startfile(os.path.join(musicpath,songs[random.randint(1,10)]))

        elif 'screen recording' in query:
            import cv2
            import pyautogui
            from win32api import GetSystemMetrics
            import numpy as np
            import time
            width = GetSystemMetrics(0)
            height = GetSystemMetrics(1)
            dim = (width,height)
            f= cv2.VideoWriter_fourcc(*"XVID")
            output = cv2.VideoWriter("test.mp4",f,30.0,dim)
            now_start_tine = time.time()
            dur=10
            end_time = now_start_tine + dur
            while True:
                image = pyautogui.screenshot()
                frame_1 = np.array(image)
                frame = cv2.cvtColor(frame_1,cv2.COLOR_BGR2RGB)
                output.write(frame)
                c_time = time.time()
                if c_time > end_time :
                    break
            output.release()
            speak("Recording Ended")

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"the time is{strTime}")
            #i=i+1

        elif 'open code' in query:
            codePath = "C:\\Users\\utkun\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
            os.startfile(codePath)
            #i=i+1
        

        elif 'net speed' in query :
            def speedcheck():
                s=speedtest.Speedtest()
                s.get_servers()
                down = str(round(s.download()/(10**6),3))+"Mbps"
                up = str(round(s.download()/(10**6),3))+"Mbps"
                lab_d.config(text=down)
                lab_u.config(text=up)


            sp=Tk()
            sp.title(" Internet Speed Test ")
            sp.geometry("500x400")
            sp.config(bg="black")

            lab = Label(sp,text="Internet Speed Test",font=("Time New Roman",30),bg="black",fg="white")
            lab.place(x=75,y=10)

            lab= Label(sp,text="Download Speed ",font=("Time New Roman",20),bg="black",fg="white")
            lab.place(x=90,y=80)

            lab_d = Label(sp,text="00",font=("Time New Roman",20),bg="black",fg="white")
            lab_d.place(x=90,y=120)

            lab = Label(sp,text="Upload Speed",font=("Time New Roman",20),bg="black",fg="white")
            lab.place(x=90,y=160)

            lab_u = Label(sp,text="00",font=("Time New Roman",20),bg="black",fg="white")
            lab_u.place(x=90,y=200)

            button = Button(sp,text = "CHECK",font=("Time New Roman",20),bg="red",relief=RAISED,command=speedcheck())
            button.place(x=175,y=280,height = 40)


            sp.mainloop()


        elif 'camera' in query or 'photo' in query:
            ec.capture(0, "jarvis camera","img.jpg")
            #i=i+1

        elif 'open notes' in query:
            speak("what should i write sir")
            note = takeCommand()
            file = open('jarvis.txt', 'w')
            file.write(note)
            #i=i+1

        elif 'to do list' in query:
            todoApp()

        elif "don't listen" in query or "stop listening" in query:
            speak("for how much time you want to stop jarvis")
            a = int(takeCommand())
            datetime.sleep(a)
            print(a)
            #i=i+1

        elif 'open snipping tool' in query:
            snip_tool = open("%windir%\\system32\\SnippingTool.exe")
            #i=i+1

        elif 'open whatsapp' in query:
            what_sapp = open("C:\\Users\\utkun\\AppData\\Local\\WhatsApp\\WhatsApp.exe")
            what_sapp=csv.reader(what_sapp)
            #i=i+1

        elif 'open linkedin' in query:
            webbrowser.open("www.linkedin.com")
            
        elif 'quit' in query:
            exit()
            #i=i+1
'''
        elif 'search'.lower() in query.lower():
            ai(prompt=query)
            
        else:
            chat(chatStr=query)
'''

        

        
